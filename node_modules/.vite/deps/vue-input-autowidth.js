import "./chunk-DZZM6G22.js";

// node_modules/vue-input-autowidth/dist/vue-input-autowidth.es.js
var e = { maxWidth: void 0, minWidth: void 0, comfortZone: "0px", watchWindowSize: false, windowResizeHandlerDebounceTime: 150, disableNonInputWarning: false };
var i = (e2) => {
  const { mirror: i2, options: t2 } = e2;
  t2.maxWidth && (e2.style.maxWidth = t2.maxWidth), t2.minWidth && (e2.style.minWidth = t2.minWidth);
  let n2 = e2.value;
  for (n2 || (n2 = e2.placeholder || ""); i2.childNodes.length; ) i2.removeChild(i2.childNodes[0]);
  i2.appendChild(document.createTextNode(n2));
  const o2 = i2.scrollWidth + 2;
  o2 != e2.scrollWidth && (e2.style.width = `${o2}px`);
};
var t = (e2) => {
  const i2 = window.getComputedStyle(e2), { options: t2 } = e2;
  Object.assign(e2.mirror.style, { position: "absolute", top: "0", left: "0", visibility: "hidden", height: "0", overflow: "hidden", whiteSpace: "pre", fontSize: i2.fontSize, fontFamily: i2.fontFamily, fontWeight: i2.fontWeight, fontStyle: i2.fontStyle, letterSpacing: i2.letterSpacing, textTransform: i2.textTransform, paddingRight: `calc(${t2.comfortZone} + ${i2.paddingRight} + ${i2.borderRightWidth})`, paddingLeft: `calc(${i2.paddingLeft} + ${i2.borderLeftWidth})` });
};
var n = (e2) => {
  t(e2), i(e2);
};
var o = { beforeMount: function(i2, t2) {
  var n2;
  if (i2.options = (n2 = t2.value, Object.assign({}, e, n2)), !i2.options.disableNonInputWarning && "INPUT" !== i2.tagName.toLocaleUpperCase()) throw new Error("v-input-autowidth can only be used on input elements.");
}, mounted: function(e2, o2, r2) {
  const d = Object.prototype.hasOwnProperty.call(r2.props, "@onUpdate:modelValue");
  if (e2.sizerFunc = (t2) => i(e2), e2.mirror = document.createElement("div"), t(e2), e2.mirror.setAttribute("aria-hidden", "true"), document.body.appendChild(e2.mirror), n(e2), d || e2.addEventListener("input", e2.sizerFunc), e2.options.watchWindowSize && void 0 !== e2.options.windowResizeHandlerDebounceTime) {
    const i2 = (i3) => n(e2);
    e2.windowResizeHandler = /* @__PURE__ */ ((e3, i3) => {
      let t2;
      return (...n2) => {
        let o3;
        return t2 && clearTimeout(t2), t2 = setTimeout(() => {
          o3 = e3(...n2);
        }, i3), o3;
      };
    })(i2, e2.options.windowResizeHandlerDebounceTime), window.addEventListener("resize", e2.windowResizeHandler, { passive: true });
  }
}, updated: function(e2) {
  e2.sizerFunc && e2.sizerFunc();
}, unmounted: function(e2) {
  document.body.removeChild(e2.mirror), e2.sizerFunc && e2.removeEventListener("input", e2.sizerFunc), e2.options.watchWindowSize && e2.windowResizeHandler && window.removeEventListener("resize", e2.windowResizeHandler);
} };
var r = { install: (e2) => {
  Number(e2.version.split(".")[0]) < 3 && console.warn("This plugin requires Vue 3"), e2.directive("autowidth", o);
} };
export {
  o as directive,
  r as plugin
};
//# sourceMappingURL=vue-input-autowidth.js.map
